{"version":3,"sources":["webpack:///./client/src/components/resetpassword/resetpassword.tsx"],"names":[],"mappings":"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","file":"28.index_bundle.js","sourcesContent":["'use strict';\r\n\r\nimport * as React from 'react';\r\nimport { Redirect, NavLink } from \"react-router-dom\";\r\nimport { IUserContext, userConsumer } from '../user/user-provider';\r\n\r\nexport interface ResetPasswordProps {\r\n\tuser: IUserContext;\r\n}\r\n\r\nexport interface ResetPasswordState {\r\n\tredirect: boolean;\r\n\tpasswordMismtach: boolean;\r\n\tpasswordBad: boolean;\r\n}\r\n\r\nexport interface ResetPasswordMethods {\r\n\thitKey: (event: UIEvent) => void;\r\n\tupdatePassword: (event: UIEvent) => void;\r\n\tupdatePasswordResult: (error: boolean) => void;\r\n\tredirect: (event: UIEvent) => void;\r\n}\r\n\r\n\r\nclass ResetPassword extends React.Component<ResetPasswordProps, ResetPasswordState> implements ResetPasswordMethods {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        \tredirect: false,\r\n        \tpasswordMismtach: false,\r\n        \tpasswordBad: false,\r\n        };\r\n\r\n\t\tthis.hitKey = this.hitKey.bind(this);\r\n\t\tthis.updatePassword = this.updatePassword.bind(this);\r\n\t\tthis.updatePasswordResult = this.updatePasswordResult.bind(this);\r\n\t\tthis.redirect = this.redirect.bind(this);\r\n    }\r\n\r\n\thitKey(event) {\r\n\t\tif (event.key == 'Enter') {\r\n            this.updatePassword(event);\r\n        }\r\n\t}\r\n\r\n    updatePassword(event) {\r\n\t\tevent.preventDefault();\r\n\t\tlet oldpassword = this.oldpasswordRef.current.value;\r\n\t\tlet newpassword = this.newpasswordRef.current.value;\r\n\t\tlet confirmpassword = this.confirmpasswordRef.current.value;\r\n\t\tif (!oldpassword) {\r\n\t\t\tthis.setState(() => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpasswordBad: true,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (newpassword == confirmpassword) {\r\n\t\t\tthis.setState(() => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpasswordBad: false,\r\n\t\t\t\t\tpasswordMismtach: false,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\tthis.props.user.updatePassword(oldpassword, newpassword, this.updatePasswordResult);\r\n\t\t} else {\r\n\t\t\tthis.oldpasswordRef.current.value = '';\r\n\t\t\tthis.newpasswordRef.current.value = '';\r\n\t\t\tthis.confirmpasswordRef.current.value = '';\r\n\r\n\t\t\tthis.setState(() => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpasswordMismtach: true,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t}\r\n    }\r\n\r\n    updatePasswordResult(error) {\r\n    \tif (error) {\r\n\t\t\tthis.oldpasswordRef.current.value = '';\r\n\t\t\tthis.newpasswordRef.current.value = '';\r\n\t\t\tthis.confirmpasswordRef.current.value = '';\r\n\t\t\tthis.setState(() => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpasswordMismtach: true,\r\n\t\t\t\t\tpasswordBad: true,\r\n\t\t\t\t};\r\n\t\t\t});\r\n    \t} else {\r\n\t\t\tthis.redirect();\r\n    \t} \r\n    }\r\n\r\n\tredirect() {\r\n\t\tthis.setState(() => {\r\n\t\t\treturn {\r\n\t\t\t\tredirect: true,\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\toldpasswordRef: React.RefObject<HTMLInputElement> = React.createRef();\r\n\tnewpasswordRef: React.RefObject<HTMLInputElement> = React.createRef();\r\n\tconfirmpasswordRef: React.RefObject<HTMLInputElement> = React.createRef();\r\n\r\n\trender() {\r\n\t\tconst { hitKey, updatePassword, oldpasswordRef, newpasswordRef, confirmpasswordRef } = this;\r\n\t\tconst { redirect, passwordBad, passwordMismtach} = this.state;\r\n\r\n\t\tif (redirect) {\r\n\t\t\treturn (<Redirect to='/profile'/>);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"profile-wrapper\" >\r\n\t\t\t\t<NavLink exact to={'/profile/changepassword'} activeClassName=\"selected\" ><h2>Change Password</h2></NavLink>\r\n\t\t\t\t<form onSubmit={updatePassword}>\r\n\t\t\t\t\t<label>Old Password{passwordBad ? (<span className=\"errortext\" >* Bad Password</span>) : ''}</label>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<input type='password' onKeyPress={hitKey} placeholder=\"Old Password\" ref={oldpasswordRef} />\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<label>New Password{passwordMismtach ? (<span className=\"errortext\" >*</span>) : ''}</label>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<input type='password' onKeyPress={hitKey} placeholder=\"New Password\" ref={newpasswordRef} />\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<label>Confrim New Password{passwordMismtach ? (<span className=\"errortext\" >* Must match new Password</span>) : ''}</label>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<input type='password' onKeyPress={hitKey} placeholder=\"New Password\" ref={confirmpasswordRef} />\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<input type='submit' onClick={updatePassword} value='SAVE' />\r\n\t\t\t\t</form>\t\r\n\t\t\t</div>\r\n\t\t);\t\t\t\r\n\t}\r\n};\r\n\r\nexport default userConsumer(ResetPassword);"],"sourceRoot":""}