{"version":3,"sources":["webpack:///./client/src/components/event/event-list-item.tsx","webpack:///./client/src/components/event/event-list.tsx","webpack:///./client/src/components/event/event-provider.tsx"],"names":[],"mappings":"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","file":"26.index_bundle.js","sourcesContent":["'use strict';\n\nimport * as React from 'react';\nimport RichTextEditor from 'react-rte';\nimport { Link, withRouter } from 'react-router-dom';\nimport * as moment from 'moment';\nimport { eventConsumer, IEventContext } from './event-provider';\n\nexport interface EventListItemProps {\n\t_eventItemId: string;\n\tdisplayDetails: boolean;\n\tevent: IEventContext;\n}\n\n\nclass EventListItem extends React.Component<EventListItemProps> {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n\t\tthis.props.event.getEventItem(this.props._eventItemId)\n\t}\n\n\trender() {\n\t\tconst { displayDetails, _eventItemId} = this.props;\n\t\tconst { title, start_date, end_date, details, createdUpdatedDateTime } = this.props.event.eventItem;\n\n\t\tlet startDateTime = moment(start_date);\n\t\tlet endDateTime = moment(end_date);\n\n\t\tlet startDay = startDateTime.calendar(null, {\n\t\t\tsameDay: '[Today]',\n\t\t\tnextDay: '[Tomorrow]',\n\t\t\tnextWeek: 'dddd',\n\t\t\tlastDay: '[Yesterday]',\n\t\t\tlastWeek: '[Last] dddd',\n\t\t\tsameElse: 'MM/DD/YYYY',\n\t\t});\n\n\t\tlet endDay = endDateTime.calendar(null, {\n\t\t\tsameDay: '[Today]',\n\t\t\tnextDay: '[Tomorrow]',\n\t\t\tnextWeek: 'dddd',\n\t\t\tlastDay: '[Yesterday]',\n\t\t\tlastWeek: '[Last] dddd',\n\t\t\tsameElse: 'MM/DD/YYYY',\n\t\t});\n\n\t\tlet startTime = startDateTime.format(\"h:mm a\");\n\t\tlet endTime = endDateTime.format(\"h:mm a\");\n\n\t\tlet dateTime = startDay + ' at ' + startTime;\n\n\t\tif (moment() >= startDateTime) {\n\t\t\tdateTime = 'Now';\n\t\t}\n\n\t\tif (startDay !== endDay) {\n\t\t\tdateTime += ' to ' + endDay + ' at ' + endTime;\n\t\t} else if (startTime !== endTime) {\n\t\t\tdateTime += ' until ' + endTime;\n\t\t}\n\n\n\t\tlet content = '<h5>' + title + '</h5>' + '<p className=\"event-date-time\">' + dateTime + '</p>' + (displayDetails ? details : '');\n\n\t\tlet createdDetails = displayDetails ? (<p className='event-created-updated-date-time' >{createdUpdatedDateTime}</p>) : '';\n\t\n\t\treturn (\n\t\t\t<div className=\"event-list-item-wrapper\" >\t\t\t\t\n\t\t\t\t<Link className=\"event-link\" to={'/event/item/'+_eventItemId} >\n\t\t\t\t\t<RichTextEditor value={RichTextEditor.createValueFromString(content, 'html')} readOnly={true} />\t\n\t\t\t\t</Link>\n\t\t\t\t{createdDetails}\n\t\t\t</div>\n\t\t);\t\t\n\t}\n};\n\n\n\n\n\n\nexport default eventConsumer(EventListItem);","'use strict';\n\nimport * as React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport EventListItem, { EventListItemProps } from './event-list-item';\nimport { userConsumer, IUserContext } from '../user/user-provider';\nimport { eventConsumer, IEventContext } from './event-provider';\n\nexport interface EventListDefaultProps {\n\tlimit: number;\n\tdiscontinued: boolean;\n\tdisplayDetails: boolean;\n}\n\nexport interface EventListProps extends EventListDefaultProps {\n\tuser: IUserContext;\n\tevent: IEventContext;\n}\n\nclass EventList extends React.Component<EventListProps> {\n\tpublic static defaultProps:EventListDefaultProps = {\n\t\tlimit: 3,\n\t\tdiscontinued: false,\n\t\tdisplayDetails: true,\n\t}\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n    \tlet query = {\n\t\t\tlimit: this.props.limit,\n\t\t};\n\t\tthis.props.event.getEventItems(query)\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n    \tlet update = false;\n    \tlet prevDiscontinued = prevProps.discontinued;\n    \tlet currentDiscontinued = this.props.discontinued;\n\n    \tif (prevDiscontinued != currentDiscontinued) {\n\t    \tupdate = true;\n    \t}\n\n    \tif (update) {\n    \t\tlet query = {\n    \t\t\tdiscontinued: this.props.discontinued,\n    \t\t\tlimit: this.props.limit || 10,\n    \t\t}\n\t\t\tthis.props.event.getEventItems(query);\n    \t}\n\n    }\n\n\trender() {\n\t\tconst { displayDetails } = this.props;\n\t\tconst { eventItems } = this.props.event;\n\t\tconst { admin } = this.props.user;\n\n\n\t\tlet EventItemList = [];\n\t\tif (eventItems) {\n            eventItems.forEach((eventItemKey) => {\n\t\t\t\tEventItemList.push(<EventListItem key={eventItemKey} _eventItemId={eventItemKey} displayDetails={displayDetails} />)\n\t\t\t});\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"event-list-wrapper\" >\n\t\t\t\t{admin ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Link to=\"/event/newitem\">NEW EVENT</Link>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t</div>\n\t\t\t\t) : ''}\n\t\t\t\t<ul className='event-item-list' >\n\t\t\t\t\t{EventItemList}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\t\t\t\n\t}\n};\n\nexport default userConsumer(eventConsumer(withRouter(EventList)));","'use strict';\r\n\r\nimport * as React from 'react';\r\nimport * as querystring from 'querystring';\r\nimport * as moment from 'moment';\r\nimport { match } from 'react-router';\r\n\r\nexport interface IEventContext extends IEventWrapperState, IEventWrapperMethods {\r\n    eventItem?: EventItem;\r\n}\r\n\r\nconst Context: IEventContext =  {\r\n    getEventItems: (query) => {\r\n        console.error('Error: Cannot getEventItems no EventContext.Provider element in parents');\r\n    },\r\n    getEventItem: (_eventItemId) => {\r\n        console.log('Error: Cannot getEventItem no EventContext.Provider element in parents');\r\n    },\r\n    addEventItem: (params, callback) => {\r\n        console.log('Error: Cannot addEventItem no EventContext.Provider element in parents');\r\n    },\r\n    updateEventItem: (params, callback) => {\r\n        console.log('Error: Cannot updateEventItemParams no EventContext.Provider element in parents');\r\n    },\r\n    eventItemList: {},\r\n    eventItems: [],\r\n    page: 0,\r\n    totalPages: 0,\r\n    limit: 0,\r\n    total: 0,\r\n    pageTotal: 0,\r\n}\r\n\r\nexport const EventContext = React.createContext(Context);\r\n\r\nexport interface IEventWrapperProps {\r\n    initialState?: IEventWrapperState;\r\n}\r\n\r\nexport interface IEventWrapperState {\r\n    eventItemList: {};\r\n    eventItems: string[];\r\n    page: number;\r\n    totalPages: number;\r\n    limit: number;\r\n    total: number;\r\n    pageTotal: number;\r\n}\r\n\r\nexport interface getEventItemsQuery {\r\n    limit?: number,\r\n    format?: 'json',\r\n    discontinued?: boolean; \r\n}\r\n\r\nexport interface EventItem extends addEventItemParams {\r\n    _eventItemId: string,\r\n    createdUpdatedDateTime: string,\r\n    discontinued: boolean,\r\n}\r\n\r\nexport interface addEventItemParams {\r\n    title: string; \r\n    start_date: string | moment.Moment | Date; \r\n    end_date: string | moment.Moment | Date;\r\n    details: string;\r\n}\r\n\r\nexport interface updateEventItemParams {\r\n    _id: string;\r\n    title?: string; \r\n    start_date?: string | moment.Moment | Date; \r\n    end_date?: string | moment.Moment | Date;\r\n    details?: string;\r\n    discontinued?: boolean;\r\n}\r\n\r\nexport interface IEventWrapperMethods {\r\n    getEventItems: (query: getEventItemsQuery) => void;\r\n    getEventItem: (_eventItemId: string) => void;\r\n    addEventItem: (params: addEventItemParams , callback: (error, _eventItemId) => void) => void;\r\n    updateEventItem: (params: updateEventItemParams, callback: (error: boolean) => void) => void;\r\n}\r\n\r\nexport class EventWrapper extends React.Component<IEventWrapperProps, IEventWrapperState, IEventWrapperMethods> implements IEventWrapperMethods {\r\n    public static defaultProps: (IEventWrapperProps) = {\r\n        initialState: {\r\n            eventItemList: {},\r\n            eventItems: [],\r\n            page: 0,\r\n            totalPages: 0,\r\n            limit: 0,\r\n            total: 0,\r\n            pageTotal: 0,\r\n        }\r\n    } \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.props.initialState;\r\n        this.getEventItems = this.getEventItems.bind(this);\r\n        this.getEventItem = this.getEventItem.bind(this);\r\n        this.addEventItem = this.addEventItem.bind(this);\r\n        this.updateEventItem = this.updateEventItem.bind(this);\r\n    }\r\n\r\n    getEventItems(query) {\r\n        let querydefaults: getEventItemsQuery = {\r\n            limit: 100,\r\n            format: 'json',\r\n        };\r\n        if (query) {\r\n            if (!query.discontinued) {\r\n                querydefaults.discontinued = false;\r\n            }\r\n            if (query.limit) {\r\n                querydefaults.limit = query.limit;\r\n            }\r\n        } else {\r\n            querydefaults.discontinued = false;\r\n        }\r\n\r\n        let _query = querystring.stringify(querydefaults);\r\n        _query = _query ? '?'+_query : '';\r\n\r\n        const request = new Request('/api/event/' + _query, {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n            },\r\n        });\r\n\r\n        fetch(request)\r\n        .then((response) => {\r\n            return response.json();\r\n        })\r\n        .then((body) => {\r\n            this.setState(() => {\r\n                return {\r\n                    page: body.page,\r\n                    totalPages: body.totalPages,\r\n                    limit: body.limit,\r\n                    total: body.total,\r\n                    pageTotal: body.pageTotal,\r\n                    eventItems: body.eventItems,\r\n                };\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            this.setState(() => {\r\n                return {\r\n                    eventItems: null,\r\n                    page: null,\r\n                    totalPages: null,\r\n                    limit: null,\r\n                    total: null,\r\n                    pageTotal: null,\r\n                };\r\n            });\r\n        });\r\n    }\r\n\r\n    getEventItem(_eventItemId) {\r\n        let query = querystring.stringify({\r\n            field: [\r\n                '_id',\r\n                'title',\r\n                'start_date',\r\n                'end_date',\r\n                'details',\r\n                'discontinued',\r\n            ],\r\n            format: 'json',\r\n        });\r\n        query = query ? '?'+query : '';\r\n\r\n        const request = new Request('/api/event/' + _eventItemId  + query, {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n            },\r\n        });\r\n        \r\n        fetch(request).then((response) => {\r\n            if (response.status < 200 || response.status >= 300) {\r\n                const error = new Error(response.statusText)\r\n                error.message = String(response);\r\n                throw error;\r\n            }\r\n            return response;\r\n        })\r\n        .then((response) => {\r\n            return response.json();\r\n        })\r\n        .then((body) => {\r\n            const {_id, title, start_date, end_date, details, createdAt, updatedAt, discontinued} = body;\r\n\r\n            this.setState((preState) => {\r\n                const { eventItemList } = preState;\r\n                    \r\n                let createDateTime = moment(createdAt);\r\n                let updatedDateTime = moment(updatedAt);\r\n\r\n                let daymessages = {\r\n                    sameDay: '[today]',\r\n                    nextDay: '[tomorrow]',\r\n                    nextWeek: 'dddd',\r\n                    lastDay: '[yesterday]',\r\n                    lastWeek: '[last] dddd',\r\n                    sameElse: 'MM/DD/YYYY',\r\n                };\r\n                let createdDay = createDateTime.calendar(null, daymessages);\r\n                let updatedDay = updatedDateTime.calendar(null, daymessages);\r\n\r\n                let createdTime = createDateTime.format(\"h:mm a\");\r\n                let updatedTime = updatedDateTime.format(\"h:mm a\");\r\n\r\n                let createdUpdatedDateTime = 'Created ';\r\n                if (createdDay !== 'today' && createdDay !== 'yesterday') {\r\n                    createdUpdatedDateTime += 'on '\r\n                }\r\n                createdUpdatedDateTime +=  createdDay + ' at ' + createdTime;\r\n\r\n                if (createdDay !== updatedDay) {\r\n                    createdUpdatedDateTime += ' updated '\r\n                    if (updatedDay !== 'today' && updatedDay !== 'yesterday') {\r\n                        createdUpdatedDateTime += 'on ';\r\n                    }\r\n                    createdUpdatedDateTime += updatedDay + ' at ' + updatedTime;\r\n\r\n                } else if (createdTime !== updatedTime) {\r\n                    createdUpdatedDateTime += ' updated at ' + updatedTime;\r\n                } \r\n\r\n                createdUpdatedDateTime += '.';\r\n                \r\n                eventItemList[_id] = {\r\n                    _eventItemId: _id,\r\n                    title: title,\r\n                    start_date: start_date,\r\n                    end_date: end_date,\r\n                    details: details,\r\n                    createdUpdatedDateTime: createdUpdatedDateTime,\r\n                    discontinued: discontinued,\r\n                };\r\n\r\n                return {eventItemList: eventItemList};\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    addEventItem(params, callback) {\r\n        const payload = {\r\n            _id: params._id,\r\n            title: params.title,\r\n            start_date: params.start_date,\r\n            end_date: params.end_date,\r\n            details: params.details,\r\n        };\r\n            \r\n        const url = '/api/event';\r\n        const request = new Request('/api/event/', {\r\n            method: 'POST',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n            },\r\n            body: JSON.stringify(payload), \r\n        });\r\n        fetch(request)\r\n        .then((response) => {\r\n            if (response.status < 200 || response.status >= 300) {\r\n                const error = new Error(response.statusText)\r\n                error.message = String(response);\r\n                throw error;\r\n            }\r\n            return response;\r\n        })\r\n        .then((response) => {\r\n            return response.json();\r\n        })\r\n        .then((response) => {\r\n            callback(false, response._id);\r\n        })\r\n        .catch((error) => {\r\n            callback(true);\r\n        });\r\n    }\r\n\r\n    updateEventItem(params:updateEventItemParams, callback) {\r\n\r\n        let payload: updateEventItemParams = {\r\n            _id: params._id\r\n        };\r\n\r\n        if ('title' in params) {\r\n            payload.title = params.title;\r\n        }\r\n        if ('start_date' in params) {\r\n            payload.start_date = params.start_date;\r\n        }\r\n        if ('end_date' in params) {\r\n            payload.end_date = params.end_date;\r\n        }\r\n        if ('details' in params) {\r\n            payload.details = params.details;\r\n        }\r\n        if ('discontinued' in params) {\r\n            payload.discontinued = params.discontinued;\r\n        }\r\n\r\n        const request = new Request('/api/event', {\r\n            method: 'PUT',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n            },\r\n            body: JSON.stringify(payload), \r\n        });\r\n\r\n        return fetch(request)\r\n        .then((response) => {\r\n            if (response.status < 200 || response.status >= 300) {\r\n                const error = new Error(response.statusText)\r\n                error.message = String(response);\r\n                throw error;\r\n            }\r\n            return response;\r\n        })\r\n        .then((response) => {\r\n            callback(false);\r\n        })\r\n        .catch((error) => {\r\n            callback(true);\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { getEventItems, getEventItem, addEventItem, updateEventItem } = this;\r\n        const { eventItems, page, pageTotal, totalPages, limit, total, eventItemList } = this.state;\r\n\r\n        const context = {\r\n            eventItems: eventItems,\r\n            eventItemList: eventItemList,\r\n            page: page,\r\n            pageTotal: pageTotal,\r\n            totalPages: totalPages,\r\n            limit: limit,\r\n            total: total,\r\n            getEventItems: getEventItems,\r\n            getEventItem: getEventItem,\r\n            addEventItem: addEventItem,\r\n            updateEventItem: updateEventItem,\r\n        }\r\n        \r\n        return (\r\n            <EventContext.Provider value={context}>\r\n                {this.props.children}\r\n            </EventContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventWrapper;\r\n\r\n\r\n\r\nexport interface eventProviderOptions {\r\n  props?: IEventWrapperProps;\r\n}\r\n\r\nexport const eventProvider = (Component, options?: eventProviderOptions) => {\r\n  class EventProvider extends React.Component<null, null> {\r\n    render () {\r\n      let eventWrapperProps: IEventWrapperProps = {};\r\n      if (options) {\r\n        if ('props' in options) {\r\n          eventWrapperProps = options.props;\r\n        }\r\n      }\r\n      return (\r\n        <EventWrapper {...eventWrapperProps}>\r\n          <Component {...this.props} />  \r\n        </EventWrapper>\r\n      );\r\n    }\r\n  }\r\n  \r\n    return EventProvider;\r\n}\r\n\r\ntype ANY = any;\r\ninterface eventConsumerprops extends ANY {\r\n    _eventItemId?: string\r\n    match?: match<{_eventItemId: string}>\r\n}\r\n\r\nexport const eventConsumer = (Component) => {\r\n  class EventConsumer extends React.Component<eventConsumerprops, null> {\r\n    render () {\r\n        let { _eventItemId } = this.props;\r\n        if ('match' in this.props) {\r\n            if ('_eventItemId' in this.props.match.params) {\r\n                _eventItemId = this.props.match.params._eventItemId;\r\n            }\r\n        }\r\n        return (\r\n            <EventContext.Consumer>\r\n                {(context) => {\r\n                    if (_eventItemId) {\r\n                        context.eventItem = {\r\n                            _eventItemId: _eventItemId,\r\n                            title: '',\r\n                            start_date: '',\r\n                            end_date: '',\r\n                            details: '',\r\n                            createdUpdatedDateTime: '',\r\n                            discontinued: false,\r\n                        };\r\n\r\n                        if (_eventItemId in context.eventItemList) {\r\n                            context.eventItem = {\r\n                                _eventItemId: _eventItemId,\r\n                                title:                                   'title' in context.eventItemList[_eventItemId] ? context.eventItemList[_eventItemId].title : '',\r\n                                start_date:                         'start_date' in context.eventItemList[_eventItemId] ? context.eventItemList[_eventItemId].start_date : '',\r\n                                end_date:                             'end_date' in context.eventItemList[_eventItemId] ? context.eventItemList[_eventItemId].end_date : '',\r\n                                details:                               'details' in context.eventItemList[_eventItemId] ? context.eventItemList[_eventItemId].details : '',\r\n                                createdUpdatedDateTime: 'createdUpdatedDateTime' in context.eventItemList[_eventItemId] ? context.eventItemList[_eventItemId].createdUpdatedDateTime : '',\r\n                                discontinued:                     'discontinued' in context.eventItemList[_eventItemId] ? context.eventItemList[_eventItemId].discontinued : false,\r\n                            };\r\n                        }\r\n                    }\r\n\r\n                    return (\r\n                        <Component {...this.props} {...{event: context}} />\r\n                    )\r\n                }}\r\n            </EventContext.Consumer>\r\n        );\r\n    }\r\n  }\r\n\r\n  return EventConsumer;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const UPDATE_EVENT_ITEM = 'UPDATE_EVENT_ITEM';\r\n// const updateEventItem = function(_new, _old, callback) {\r\n//     let payload = {_id: _old._eventItemId};\r\n//     let vaildKeys = ['title', 'start_date', 'end_date', 'details', 'discontinued'];\r\n\r\n//     for (let i = 0; i < vaildKeys.length; i++) {\r\n//         if (_new[vaildKeys[i]] != _old[vaildKeys[i]]) {\r\n//             payload[vaildKeys[i]] = _new[vaildKeys[i]];\r\n//         }\r\n//     }\r\n    \r\n//     return function(dispatch) {\r\n//         const url = '/api/event';\r\n//         return fetch(url, {\r\n//             method: 'PUT',\r\n//             credentials: 'same-origin',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//                 'Accept': 'application/json',\r\n//             },\r\n//             body: JSON.stringify(payload), \r\n//         }).then(function(response) {\r\n//             if (response.status < 200 || response.status >= 300) {\r\n//                 const error = new Error(response.statusText)\r\n//                 error.response = response\r\n//                 throw error;\r\n//             }\r\n//             return response;\r\n//         })\r\n//         .then(function(response) {\r\n//             callback(false);\r\n//             return dispatch(updateEventItemSuccess());\r\n//         })\r\n//         .catch(function(error) {\r\n//             callback(true);\r\n//             return dispatch(updateEventItemError(error));\r\n//         });\r\n//     };\r\n// };\r\n\r\n// const UPDATE_EVENT_ITEM_SUCCESS = \"UPDATE_EVENT_ITEM_SUCCESS\";\r\n// const updateEventItemSuccess = function() {\r\n//     return {\r\n//         type: UPDATE_EVENT_ITEM_SUCCESS,\r\n//     };\r\n// };\r\n\r\n// const UPDATE_EVENT_ITEM_ERROR = 'UPDATE_EVENT_ITEM_ERROR';\r\n// const updateEventItemError = function(error) {\r\n//     return {\r\n//         type: UPDATE_EVENT_ITEM_ERROR,\r\n//         error: error,\r\n//     };\r\n// };\r\n\r\n// exports.updateEventItem = updateEventItem;\r\n// exports.UPDATE_EVENT_ITEM_SUCCESS = UPDATE_EVENT_ITEM_SUCCESS;\r\n// exports.updateEventItemSuccess = updateEventItemSuccess;\r\n// exports.UPDATE_EVENT_ITEM_ERROR = UPDATE_EVENT_ITEM_ERROR;\r\n// exports.updateEventItemError = updateEventItemError;"],"sourceRoot":""}